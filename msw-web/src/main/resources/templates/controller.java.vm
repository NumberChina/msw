package ${package.Controller};

import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.saic.msw.dto.ApiReqDto;
import com.saic.msw.dto.ApiResultDto;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;

import java.util.List;

/**
 * <p>
 *  ${entity}前端控制器  RestController注解 将结果以JSON形式返回
 * </p>
 *
 * @author leilei
 * @since ${date}
 */
@RestController
@RequestMapping("${table.entityPath}")
public class ${entity}Controller {

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
     * 保存修改公用
     * @param reqDto 修改或保存的对象
     * @return ApiResultDto
     */
    @RequestMapping("/save")
    public ApiResultDto save(@RequestBody ApiReqDto<${entity}> reqDto) {
        ${table.entityPath}Service.updateById(reqDto.getParams());
        return ApiResultDto.success();
    }

    /**
     * 批量删除 支持POST GET
     * @param reqDto Long 类型 List 集合
     * @return ApiResultDto
     */
    @RequestMapping("remove")
    public ApiResultDto delete(@RequestBody ApiReqDto<List<Long>> reqDto) {
        ${table.entityPath}Service.removeByIds(reqDto.getParams());
        return ApiResultDto.success();
    }

    /**
     * 查询一个
     *
     * @param reqDto 查询id
     * @return ApiResultDto
     */
    @RequestMapping("findOne")
    public ApiResultDto findOne(@RequestBody ApiReqDto<Long> reqDto) {
        ${entity} ${table.entityPath} = ${table.entityPath}Service.getById(reqDto.getParams());
        return ApiResultDto.success(${table.entityPath});
    }


    /**
    * 查询所有
    * @param
    * @return
    */
    @RequestMapping("queryList")
    public ApiResultDto queryList() {
        List<${entity}> list = ${table.entityPath}Service..list();
        return ApiResultDto.success(list);
    }

    /**
     *
     * 分页查询
     * @param reqDto
     * @return ApiResultDto
     */
    @RequestMapping("queryPage")
    public ApiResultDto findAll(@RequestBody ApiReqDto<${entity}> reqDto) {
        Page<${entity}> page = ${table.entityPath}Service.queryPage(reqDto);
        return ApiResultDto.success(page);
    }
}
